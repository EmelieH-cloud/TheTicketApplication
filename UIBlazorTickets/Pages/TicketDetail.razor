@page "/TicketDetail/{id:int}"
@using AppLogic.Services.TagService
@using Shared.Models
@inject ITicketServices ticketService
@using AppLogic.Services.TicketServices
@inject ITagService tagservice
@using Shared.Models.Shared.Models
@using static Shared.Models.ApiModels

@if (ticket != null)
{
    <h3>Detaljer om ticket</h3>
    <div>
        <p><strong>ID:</strong> @ticket.Id</p>
        <p><strong>Rubrik:</strong> @ticket.Title</p>
        <p><strong>Beskrivning:</strong> @ticket.Description</p>
    </div>

    @if (viewModelTags.Any())
    {
        @foreach (var tag in viewModelTags)
        {
            <p>@tag.Name</p>
        }
    }

}



@code {

    TicketViewModel? ticket;
    List<TagViewModel> viewModelTags = new();

    [Parameter]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {

        // Hämta ticket-detaljer från API:et med id
        var apiTicket = await ticketService.GetTicketById(id);

        if (apiTicket != null)
        {
            // Omvandla API-modellen till en ViewModel 
            ticket = TicketViewModel.TicketViewModelFromApiModel(apiTicket);

            // Försök hämta alla taggar med en HTTP-begäran till API:et 
            var apiTags = await tagservice.GetTags();

            // om det lyckades...
            if (apiTags != null && apiTags.Any())
            {
                // ...Filtrera ut alla taggar med samma ticketID 
                var tagsWithSameTicketId = apiTags.Where(tag => tag.Id == ticket.Id).ToList();

                // konvertera dem till ViewModel
                foreach (var tag in tagsWithSameTicketId)
                {
                    var viewModelTag = TagViewModel.TagViewModelFromApiModel(tag);

                    // Lägg till i listan
                    viewModelTags.Add(viewModelTag);
                }
            }

        }

    }
}